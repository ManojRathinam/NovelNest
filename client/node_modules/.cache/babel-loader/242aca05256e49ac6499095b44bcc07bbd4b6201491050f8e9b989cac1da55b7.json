{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\EditStory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditStory = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('Uncategorized');\n  const [description, setDescription] = useState('');\n  const [thumbnail, setThumbnail] = useState('');\n  const [error, setError] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const token = currentUser;\n  const modules = {\n    toolbar: [[{\n      'header': [1, 2, 3, 4, 5, 6, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link', 'image'], ['clean']]\n  };\n  const formats = ['header', 'bold', 'italic', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\n  const POST_CATEGORIES = [\"Adventure\", \"Fiction\", \"Horror\", \"Mystery\", \"Paranormal\", \"Science Fiction\", \"Thriller\", \"Fantasy\", \"Humor\", \"Romance\", \"Historical Fiction\"];\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/${id}`);\n        setTitle(response.data.title);\n        setDescription(response.data.description);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getPost();\n  }, [id]);\n  const editStory = async e => {\n    e.preventDefault();\n    const postData = new FormData();\n    postData.set('title', title);\n    postData.set('category', category);\n    postData.set('description', description);\n    postData.append('thumbnail', thumbnail);\n    try {\n      const response = await axios.patch(`${process.env.REACT_APP_BASE_URL}/posts/${id}`, postData, {\n        withCredentials: true,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        navigate('/');\n      }\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"create-post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form_error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form create_form\",\n        onSubmit: editStory,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: POST_CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          modules: modules,\n          formats: formats,\n          value: description,\n          onChange: setDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setThumbnail(e.target.files[0]),\n          accept: \"image/png,image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(EditStory, \"tkvYNm3iCgE+4GWYf03EPAHuQUk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditStory;\nexport default EditStory;\nvar _c;\n$RefreshReg$(_c, \"EditStory\");","map":{"version":3,"names":["React","useContext","useEffect","useState","ReactQuill","useNavigate","useParams","axios","jsxDEV","_jsxDEV","EditStory","_s","title","setTitle","category","setCategory","description","setDescription","thumbnail","setThumbnail","error","setError","id","navigate","currentUser","UserContext","token","modules","toolbar","formats","POST_CATEGORIES","getPost","response","get","process","env","REACT_APP_BASE_URL","data","console","log","editStory","e","preventDefault","postData","FormData","set","append","patch","withCredentials","headers","Authorization","status","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","autoFocus","name","map","cat","files","accept","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/EditStory.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EditStory = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [category, setCategory] = useState('Uncategorized');\r\n  const [description, setDescription] = useState('');\r\n  const [thumbnail, setThumbnail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const {currentUser} = useContext(UserContext)\r\n  const token = currentUser\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n      ['link', 'image'],\r\n      ['clean']\r\n    ],\r\n  };\r\n\r\n  const formats = [\r\n    'header',\r\n    'bold', 'italic', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image'\r\n  ];\r\n\r\n  const POST_CATEGORIES = [\"Adventure\", \"Fiction\", \"Horror\", \"Mystery\", \"Paranormal\", \"Science Fiction\", \"Thriller\", \"Fantasy\", \"Humor\", \"Romance\", \"Historical Fiction\"];\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/${id}`);\r\n        setTitle(response.data.title);\r\n        setDescription(response.data.description);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getPost();\r\n  }, [id]);\r\n\r\n  const editStory = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const postData = new FormData();\r\n    postData.set('title', title);\r\n    postData.set('category', category);\r\n    postData.set('description', description);\r\n    postData.append('thumbnail', thumbnail);\r\n\r\n    try {\r\n      const response = await axios.patch(`${process.env.REACT_APP_BASE_URL}/posts/${id}`, postData, {\r\n        withCredentials: true,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      if (response.status === 201) {\r\n        navigate('/');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className='create-post'>\r\n      <div className='container'>\r\n        <h2>Edit Story</h2>\r\n        {error && <p className='form_error-message'>{error}</p>}\r\n        <form className=\"form create_form\" onSubmit={editStory}>\r\n          <input type='text' placeholder='Title' value={title} onChange={e => setTitle(e.target.value)} autoFocus />\r\n          <select name='category' value={category} onChange={e => setCategory(e.target.value)}>\r\n            {POST_CATEGORIES.map(cat => <option key={cat}>{cat}</option>)}\r\n          </select>\r\n          <ReactQuill modules={modules} formats={formats} value={description} onChange={setDescription} />\r\n          <input type=\"file\" onChange={e => setThumbnail(e.target.files[0])} accept='image/png,image/jpeg' />\r\n          <button type='submit' className='btn primary'>Update</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditStory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}