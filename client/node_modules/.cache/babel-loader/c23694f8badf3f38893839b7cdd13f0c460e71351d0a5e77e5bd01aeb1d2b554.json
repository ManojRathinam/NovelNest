{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\CreateStory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateStory = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('Uncategorized');\n  const [description, setDescription] = useState('');\n  const [storycover, setStoryCover] = useState('');\n  const {\n    currentUser\n  } = useContext;\n  const modules = {\n    toolbar: [[{\n      'header': [1, 2, 3, 4, 5, 6, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link', 'image'], ['clean']]\n  };\n  const formats = ['header', 'bold', 'italic', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\n  const POST_CATEGORIES = [\"Adventure\", \"Fiction\", \"Horror\", \"Mystery\", \"Paranormal\", \"Science Fiction\", \"Thriller\", \"Fantasy\", \"Humor\", \"Romance\", \"Historical Fiction\"];\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Logic to handle form submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"create-post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form_error-message\",\n        children: \"This is an error message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form create_form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: POST_CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 40\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          modules: modules,\n          formats: formats,\n          value: description,\n          onChange: setDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setStoryCover(e.target.files[0]),\n          accept: \"image/png,image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn primary\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateStory, \"F3prMDgIgHOZdxBboTx99O10mRk=\");\n_c = CreateStory;\nexport default CreateStory;\nvar _c;\n$RefreshReg$(_c, \"CreateStory\");","map":{"version":3,"names":["React","useState","useContext","ReactQuill","jsxDEV","_jsxDEV","CreateStory","_s","title","setTitle","category","setCategory","description","setDescription","storycover","setStoryCover","currentUser","modules","toolbar","formats","POST_CATEGORIES","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","autoFocus","name","map","cat","files","accept","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/CreateStory.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'\r\nconst CreateStory = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [category, setCategory] = useState('Uncategorized');\r\n  const [description, setDescription] = useState('');\r\n  const [storycover, setStoryCover] = useState('');\r\n\r\n  const {currentUser} = useContext\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{'header':[1,2,3,4,5,6, false]}],\r\n      ['bold', 'italic','underline','strike','blockquote'],\r\n      [{'list':'ordered'},{'list':'bullet'},{'indent':'-1'},{'indent':'+1'}],\r\n      ['link','image'],\r\n      ['clean']\r\n    ],\r\n  };\r\n\r\n  const formats = [\r\n    'header',\r\n    'bold','italic','strike','blockquote',\r\n    'list','bullet','indent',\r\n    'link','image'\r\n  ];\r\n\r\n  const POST_CATEGORIES = [\"Adventure\",\"Fiction\",\"Horror\",\"Mystery\",\"Paranormal\",\"Science Fiction\",\"Thriller\",\"Fantasy\",\"Humor\",\"Romance\",\"Historical Fiction\"];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Logic to handle form submission\r\n  };\r\n\r\n  return (\r\n    <section className='create-post'>\r\n      <div className='container'>\r\n        <h2>Create a Story</h2>\r\n        <p className='form_error-message'>\r\n          This is an error message\r\n        </p>\r\n        <form className=\"form create_form\" onSubmit={handleSubmit}>\r\n          <input type='text' placeholder='Title' value={title} onChange={e => setTitle(e.target.value)} autoFocus/>\r\n          <select name='category' value={category} onChange={e=> setCategory(e.target.value)}>\r\n            {\r\n            POST_CATEGORIES.map(cat => <option key={cat}>{cat}</option>)\r\n            }\r\n          </select>\r\n          <ReactQuill modules={modules} formats={formats} value={description} onChange={setDescription} />\r\n          <input type=\"file\" onChange={e => setStoryCover(e.target.files[0])} accept='image/png,image/jpeg' />\r\n          <button type='submit' className='btn primary'>Create</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CreateStory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}