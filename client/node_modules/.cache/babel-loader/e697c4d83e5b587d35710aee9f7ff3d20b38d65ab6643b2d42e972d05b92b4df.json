{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\EditStory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { UserContext } from '../context/userContext';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditStory = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('Uncategorized');\n  const [description, setDescription] = useState('');\n  const [thumbnail, setthumbnail] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const modules = {\n    toolbar: [[{\n      'header': [1, 2, 3, 4, 5, 6, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link', 'image'], ['clean']]\n  };\n  const formats = ['header', 'bold', 'italic', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\n  const POST_CATEGORIES = [\"Adventure\", \"Fiction\", \"Horror\", \"Mystery\", \"Paranormal\", \"Science Fiction\", \"Thriller\", \"Fantasy\", \"Humor\", \"Romance\", \"Historical Fiction\"];\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Logic to handle form submission\n  };\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/${id}`);\n        setTitle(response.data.title);\n        setDescription(response.data.description);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getPost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"create-post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form_error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form create_form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: POST_CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 40\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          modules: modules,\n          formats: formats,\n          value: description,\n          onChange: setDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setthumbnail(e.target.files[0]),\n          accept: \"image/png,image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(EditStory, \"Ou7OdZp2YzF7DY6bWiNKupy7iOw=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditStory;\nexport default EditStory;\nvar _c;\n$RefreshReg$(_c, \"EditStory\");","map":{"version":3,"names":["React","useEffect","useState","ReactQuill","UserContext","useNavigate","useParams","axios","jsxDEV","_jsxDEV","EditStory","_s","title","setTitle","category","setCategory","description","setDescription","thumbnail","setthumbnail","error","setError","navigate","id","modules","toolbar","formats","POST_CATEGORIES","handleSubmit","e","preventDefault","getPost","response","get","process","env","REACT_APP_BASE_URL","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","autoFocus","name","map","cat","files","accept","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/EditStory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { UserContext } from '../context/userContext';\r\nimport {useNavigate, useParams} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n\r\nconst EditStory = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [category, setCategory] = useState('Uncategorized');\r\n  const [description, setDescription] = useState('');\r\n  const [thumbnail, setthumbnail] = useState('');\r\n  const [error, setError] = useState('')\r\n\r\n  const navigate = useNavigate();\r\n  const {id} = useParams();\r\n\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{'header':[1,2,3,4,5,6, false]}],\r\n      ['bold', 'italic','underline','strike','blockquote'],\r\n      [{'list':'ordered'},{'list':'bullet'},{'indent':'-1'},{'indent':'+1'}],\r\n      ['link','image'],\r\n      ['clean']\r\n    ],\r\n  };\r\n\r\n  const formats = [\r\n    'header',\r\n    'bold','italic','strike','blockquote',\r\n    'list','bullet','indent',\r\n    'link','image'\r\n  ];\r\n\r\n  const POST_CATEGORIES = [\"Adventure\",\"Fiction\",\"Horror\",\"Mystery\",\"Paranormal\",\"Science Fiction\",\"Thriller\",\"Fantasy\",\"Humor\",\"Romance\",\"Historical Fiction\"];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Logic to handle form submission\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      try{\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/${id}`)\r\n        setTitle(response.data.title)\r\n        setDescription(response.data.description)\r\n      } catch(error){\r\n        console.log(error)\r\n      }\r\n    }\r\n    getPost();\r\n  },[])\r\n\r\n  return (\r\n    <section className='create-post'>\r\n      <div className='container'>\r\n        <h2>Edit Story</h2>\r\n        <p className='form_error-message'>\r\n          {error}\r\n        </p>\r\n        <form className=\"form create_form\" onSubmit={handleSubmit}>\r\n          <input type='text' placeholder='Title' value={title} onChange={e => setTitle(e.target.value)} autoFocus/>\r\n          <select name='category' value={category} onChange={e=> setCategory(e.target.value)}>\r\n            {\r\n            POST_CATEGORIES.map(cat => <option key={cat}>{cat}</option>)\r\n            }\r\n          </select>\r\n          <ReactQuill modules={modules} formats={formats} value={description} onChange={setDescription} />\r\n          <input type=\"file\" onChange={e => setthumbnail(e.target.files[0])} accept='image/png,image/jpeg' />\r\n          <button type='submit' className='btn primary'>Update</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EditStory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}