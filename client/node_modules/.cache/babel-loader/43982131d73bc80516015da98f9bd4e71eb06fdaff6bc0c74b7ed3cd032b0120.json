{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\Authors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Avartar1 from '../components/images/author1.jpg';\nimport Avartar2 from '../components/images/author2.jpg';\nimport Avartar3 from '../components/images/author3.jpeg';\nimport Avartar4 from '../components/images/author4.jpg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authorsData = [{\n  id: 1,\n  avatar: Avartar1,\n  name: \"Obama Bin Laden\",\n  posts: 1\n}, {\n  id: 2,\n  avatar: Avartar2,\n  name: \"Yann Martel\",\n  posts: 1\n}, {\n  id: 3,\n  avatar: Avartar3,\n  name: \"Sir Arthur Conan Doyle\",\n  posts: 1\n}, {\n  id: 4,\n  avatar: Avartar4,\n  name: \"Chetan Bhagat\",\n  posts: 1\n}];\nconst Authors = () => {\n  _s();\n  const [authors, setAuthors] = useState(authorsData);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"authors\",\n    children: authors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container authors_container\",\n      children: authors.map(({\n        id,\n        avatar,\n        name,\n        posts\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/users/${id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author_avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: avatar,\n              alt: `Image of ${name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), \".authotr\"]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No users/Authors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Authors, \"GMNgbZCDjbiGbOW1drS9iKE59Xs=\");\n_c = Authors;\nexport default Authors;\nvar _c;\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"names":["React","useState","Avartar1","Avartar2","Avartar3","Avartar4","Link","jsxDEV","_jsxDEV","authorsData","id","avatar","name","posts","Authors","_s","authors","setAuthors","className","children","length","map","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/Authors.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Avartar1 from '../components/images/author1.jpg'\r\nimport Avartar2 from '../components/images/author2.jpg'\r\nimport Avartar3 from '../components/images/author3.jpeg'\r\nimport Avartar4 from '../components/images/author4.jpg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst authorsData = [\r\n  {id:1, avatar:Avartar1,name:\"Obama Bin Laden\", posts:1},\r\n  {id:2, avatar:Avartar2,name:\"Yann Martel\",posts:1},\r\n  {id:3, avatar:Avartar3, name:\"Sir Arthur Conan Doyle\",posts:1},\r\n  {id:4, avatar:Avartar4, name:\"Chetan Bhagat\", posts:1}\r\n]\r\n\r\nconst Authors = () => {\r\n  const [authors, setAuthors] = useState(authorsData)\r\n\r\n  return (\r\n    <section className='authors'>\r\n      {authors.length > 0 ?<div className='container authors_container'>\r\n        {\r\n          authors.map(({id, avatar, name, posts}) => {\r\n            return <Link key = {id} to = {`/posts/users/${id}`}>\r\n              <div className=\"author_avatar\">\r\n                <img src={avatar} alt={`Image of ${name}`} />\r\n              </div>\r\n              .authotr\r\n            </Link>\r\n          })\r\n        }\r\n      </div>: <h2>No users/Authors found.</h2>\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Authors\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAG,CAClB;EAACC,EAAE,EAAC,CAAC;EAAEC,MAAM,EAACT,QAAQ;EAACU,IAAI,EAAC,iBAAiB;EAAEC,KAAK,EAAC;AAAC,CAAC,EACvD;EAACH,EAAE,EAAC,CAAC;EAAEC,MAAM,EAACR,QAAQ;EAACS,IAAI,EAAC,aAAa;EAACC,KAAK,EAAC;AAAC,CAAC,EAClD;EAACH,EAAE,EAAC,CAAC;EAAEC,MAAM,EAACP,QAAQ;EAAEQ,IAAI,EAAC,wBAAwB;EAACC,KAAK,EAAC;AAAC,CAAC,EAC9D;EAACH,EAAE,EAAC,CAAC;EAAEC,MAAM,EAACN,QAAQ;EAAEO,IAAI,EAAC,eAAe;EAAEC,KAAK,EAAC;AAAC,CAAC,CACvD;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAACQ,WAAW,CAAC;EAEnD,oBACED,OAAA;IAASU,SAAS,EAAC,SAAS;IAAAC,QAAA,EACzBH,OAAO,CAACI,MAAM,GAAG,CAAC,gBAAEZ,OAAA;MAAKU,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAE7DH,OAAO,CAACK,GAAG,CAAC,CAAC;QAACX,EAAE;QAAEC,MAAM;QAAEC,IAAI;QAAEC;MAAK,CAAC,KAAK;QACzC,oBAAOL,OAAA,CAACF,IAAI;UAAYgB,EAAE,EAAK,gBAAeZ,EAAG,EAAE;UAAAS,QAAA,gBACjDX,OAAA;YAAKU,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC5BX,OAAA;cAAKe,GAAG,EAAEZ,MAAO;cAACa,GAAG,EAAG,YAAWZ,IAAK;YAAE;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,YAER;QAAA,GALoBlB,EAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKhB,CAAC;MACT,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC,gBAAEpB,OAAA;MAAAW,QAAA,EAAI;IAAuB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAEd,CAAC;AAAAb,EAAA,CApBKD,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAsBb,eAAeA,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}