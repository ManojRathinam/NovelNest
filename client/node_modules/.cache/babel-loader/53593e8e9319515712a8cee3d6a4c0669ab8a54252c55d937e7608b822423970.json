{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { UserContext } from '../context/userContext';\nimport Loader from '../components/Loader';\nimport DeleteStory from './DeleteStory';\nimport PostItem from '../components/PostItem'; // Import the PostItem component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    id\n  } = useParams();\n  const token = currentUser === null || currentUser === void 0 ? void 0 : currentUser.token;\n\n  // Redirect to login page if user is not logged in\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  }, [token, navigate]); // Add token and navigate as dependencies to useEffect\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/users/${id}`, {\n          withCredentials: true,\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPosts(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n      setIsLoading(false);\n    };\n    fetchPosts();\n  }, [id, token]); // Add token as a dependency\n\n  const renderPosts = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    }\n    if (!posts.length) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"center\",\n        children: \"You have no posts yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container dashboard_container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        postID: post._id,\n        category: post.category,\n        title: post.title,\n        description: post.description // Pass the correct prop name\n        ,\n        authorID: post.creator._id,\n        thumbnail: post.thumbnail,\n        createdAt: post.createdAt\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"dashboard\",\n    children: renderPosts()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"O4EW6lJZR50UIuj+vTdK6EnD0Ds=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Link","useNavigate","useParams","axios","UserContext","Loader","DeleteStory","PostItem","jsxDEV","_jsxDEV","Dashboard","_s","currentUser","navigate","posts","setPosts","isLoading","setIsLoading","id","token","fetchPosts","response","get","process","env","REACT_APP_BASE_URL","withCredentials","headers","Authorization","data","error","console","log","renderPosts","fileName","_jsxFileName","lineNumber","columnNumber","length","className","children","map","post","postID","_id","category","title","description","authorID","creator","thumbnail","createdAt","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios'; // Import axios for making HTTP requests\r\nimport { UserContext } from '../context/userContext';\r\nimport Loader from '../components/Loader'\r\nimport DeleteStory from './DeleteStory'\r\nimport PostItem from '../components/PostItem'; // Import the PostItem component\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const {id} = useParams()\r\n\r\n  const token = currentUser?.token;\r\n\r\n  // Redirect to login page if user is not logged in\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/login');\r\n    }\r\n  }, [token, navigate]); // Add token and navigate as dependencies to useEffect\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/users/${id}`, {\r\n          withCredentials: true,\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        setPosts(response.data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n      setIsLoading(false)\r\n    }\r\n\r\n    fetchPosts();\r\n  }, [id, token]) // Add token as a dependency\r\n\r\n  const renderPosts = () => {\r\n    if (isLoading) {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (!posts.length) {\r\n      return <h2 className='center'>You have no posts yet</h2>;\r\n    }\r\n\r\n    return (\r\n      <div className='container dashboard_container'>\r\n        {posts.map(post => (\r\n          <PostItem\r\n            key={post._id}\r\n            postID={post._id}\r\n            category={post.category}\r\n            title={post.title}\r\n            description={post.description} // Pass the correct prop name\r\n            authorID={post.creator._id}\r\n            thumbnail={post.thumbnail}\r\n            createdAt={post.createdAt}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className='dashboard'>\r\n      {renderPosts()}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}