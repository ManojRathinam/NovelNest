{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\DeleteStory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../context/userContext';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteStory = ({\n  postId: id\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const navigate = useNavigate(); // Moved inside component body\n  const token = currentUser === null || currentUser === void 0 ? void 0 : currentUser.token;\n  const location = useLocation();\n  const [isLoading, setIsLoading] = us;\n\n  // Redirect to login page if user is not logged in\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  }, [token, navigate]); // Added dependencies to useEffect\n\n  const removePost = async () => {\n    setIsLoading;\n    try {\n      const response = await axios.delete(`${process.env.REACT_APP_BASE_URL}/posts/${id}`, {\n        withCredentials: true,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        if (location.pathname === `/myposts/${currentUser.id}`) {\n          navigate(0);\n        } else {\n          navigate('/');\n        }\n      }\n    } catch (error) {\n      console.log(\"Could'nt delete post.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"btn sm danger\",\n    onClick: () => removePost(id),\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteStory, \"wsWkgsZQjmHFCa2GDjhXVhjpQDg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DeleteStory;\nexport default DeleteStory;\nvar _c;\n$RefreshReg$(_c, \"DeleteStory\");","map":{"version":3,"names":["React","useContext","useEffect","UserContext","Link","useNavigate","useLocation","axios","Loader","jsxDEV","_jsxDEV","DeleteStory","postId","id","_s","currentUser","navigate","token","location","isLoading","setIsLoading","us","removePost","response","delete","process","env","REACT_APP_BASE_URL","withCredentials","headers","Authorization","status","pathname","error","console","log","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/DeleteStory.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { UserContext } from '../context/userContext';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport Loader from '../components/Loader';\r\n\r\n\r\nconst DeleteStory = ({postId: id}) => {\r\n  const { currentUser } = useContext(UserContext);\r\n  const navigate = useNavigate(); // Moved inside component body\r\n  const token = currentUser?.token;\r\n\r\n  const location = useLocation()\r\n  const [isLoading, setIsLoading] = us\r\n  \r\n  // Redirect to login page if user is not logged in\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/login');\r\n    }\r\n  }, [token, navigate]); // Added dependencies to useEffect\r\n  \r\n  const removePost = async () => {\r\n    setIsLoading\r\n    try {\r\n      const response = await axios.delete(`${process.env.REACT_APP_BASE_URL}/posts/${id}`, {withCredentials: true, headers: {Authorization: `Bearer ${token}`}})\r\n      if(response.status === 200){\r\n        if(location.pathname === `/myposts/${currentUser.id}`){\r\n          navigate(0)\r\n        }else{\r\n          navigate('/')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Could'nt delete post.\")\r\n      \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Link className='btn sm danger' onClick={() => removePost(id)}>Delete</Link>\r\n  )\r\n}\r\n\r\nexport default DeleteStory\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,WAAW,GAAGA,CAAC;EAACC,MAAM,EAAEC;AAAE,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAY,CAAC,GAAGd,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMY,KAAK,GAAGF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,KAAK;EAEhC,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGC,EAAE;;EAEpC;EACAnB,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,KAAK,EAAE;MACVD,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACC,KAAK,EAAED,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEvB,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BF,YAAY;IACZ,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,MAAM,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,UAASd,EAAG,EAAC,EAAE;QAACe,eAAe,EAAE,IAAI;QAAEC,OAAO,EAAE;UAACC,aAAa,EAAG,UAASb,KAAM;QAAC;MAAC,CAAC,CAAC;MAC1J,IAAGM,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAC;QACzB,IAAGb,QAAQ,CAACc,QAAQ,KAAM,YAAWjB,WAAW,CAACF,EAAG,EAAC,EAAC;UACpDG,QAAQ,CAAC,CAAC,CAAC;QACb,CAAC,MAAI;UACHA,QAAQ,CAAC,GAAG,CAAC;QACf;MACF;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IAEtC;EACF,CAAC;EAED,oBACEzB,OAAA,CAACN,IAAI;IAACgC,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAACT,EAAE,CAAE;IAAAyB,QAAA,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEhF,CAAC;AAAA5B,EAAA,CAnCKH,WAAW;EAAA,QAEEN,WAAW,EAGXC,WAAW;AAAA;AAAAqC,EAAA,GALxBhC,WAAW;AAqCjB,eAAeA,WAAW;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}