{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\Authors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Avatar1 from '../components/images/author1.jpg';\nimport Avatar2 from '../components/images/author2.jpg';\nimport Avatar3 from '../components/images/author3.jpeg';\nimport Avatar4 from '../components/images/author4.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authorsData = [{\n  id: 1,\n  avatar: Avatar1,\n  name: \"Obama Bin Laden\",\n  posts: 1\n}, {\n  id: 2,\n  avatar: Avatar2,\n  name: \"Yann Martel\",\n  posts: 1\n}, {\n  id: 3,\n  avatar: Avatar3,\n  name: \"Sir Arthur Conan Doyle\",\n  posts: 1\n}, {\n  id: 4,\n  avatar: Avatar4,\n  name: \"Chetan Bhagat\",\n  posts: 1\n}];\nconst Authors = () => {\n  _s();\n  const [authors, setAuthors] = useState(authorsData);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"authors\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container authors-container\",\n      children: authors.length > 0 ? authors.map(({\n        id,\n        avatar,\n        name,\n        posts\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${id}`,\n          className: \"author-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatar,\n            alt: `Image of ${name}`,\n            className: \"author-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"author-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"author-posts\",\n              children: [posts, \" Posts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No users/authors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Authors, \"GMNgbZCDjbiGbOW1drS9iKE59Xs=\");\n_c = Authors;\nexport default Authors;\nvar _c;\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"names":["React","useState","Link","Avatar1","Avatar2","Avatar3","Avatar4","jsxDEV","_jsxDEV","authorsData","id","avatar","name","posts","Authors","_s","authors","setAuthors","className","children","length","map","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/Authors.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar1 from '../components/images/author1.jpg';\r\nimport Avatar2 from '../components/images/author2.jpg';\r\nimport Avatar3 from '../components/images/author3.jpeg';\r\nimport Avatar4 from '../components/images/author4.jpg';\r\n\r\nconst authorsData = [\r\n  { id: 1, avatar: Avatar1, name: \"Obama Bin Laden\", posts: 1 },\r\n  { id: 2, avatar: Avatar2, name: \"Yann Martel\", posts: 1 },\r\n  { id: 3, avatar: Avatar3, name: \"Sir Arthur Conan Doyle\", posts: 1 },\r\n  { id: 4, avatar: Avatar4, name: \"Chetan Bhagat\", posts: 1 }\r\n];\r\n\r\nconst Authors = () => {\r\n  const [authors, setAuthors] = useState(authorsData);\r\n\r\n  return (\r\n    <section className=\"authors\">\r\n      <div className=\"container authors-container\">\r\n        {authors.length > 0 ? (\r\n          authors.map(({ id, avatar, name, posts }) => (\r\n            <div key={id} className=\"author-card\">\r\n              <Link to={`/posts/${id}`} className=\"author-link\">\r\n                <img src={avatar} alt={`Image of ${name}`} className=\"author-avatar\" />\r\n                <div className=\"author-info\">\r\n                  <h4 className=\"author-name\">{name}</h4>\r\n                  <p className=\"author-posts\">{posts} Posts</p>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h2>No users/authors found.</h2>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Authors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}