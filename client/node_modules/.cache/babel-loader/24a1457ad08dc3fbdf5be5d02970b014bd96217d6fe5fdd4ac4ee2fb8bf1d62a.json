{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\Authors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authors = () => {\n  _s();\n  const [authors, setAuthors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const getAuthors = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/users`);\n        setAuthors(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n      setIsLoading(false);\n    };\n    getAuthors();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"authors\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container authors-container\",\n      children: authors.length > 0 ? authors.map(({\n        id,\n        avatar,\n        name,\n        posts\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${id}`,\n          className: \"author-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.REACT_APP_ASSETS_URL}/uploads/${avatar}`,\n            alt: `Image of ${name}`,\n            className: \"author-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"author-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"author-posts\",\n              children: [posts, \" Posts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No users/authors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Authors, \"z794hufO/AzgOQjWRBPYTOY3qEA=\");\n_c = Authors;\nexport default Authors;\nvar _c;\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","Loader","jsxDEV","_jsxDEV","Authors","_s","authors","setAuthors","isLoading","setIsLoading","getAuthors","response","get","process","env","REACT_APP_BASE_URL","data","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","id","avatar","name","posts","to","src","REACT_APP_ASSETS_URL","alt","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/Authors.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from '../components/Loader';\r\n\r\n\r\n\r\nconst Authors = () => {\r\n  const [authors, setAuthors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const getAuthors = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/users`)\r\n        setAuthors(response.data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n      setIsLoading(false)\r\n    }\r\n\r\n    getAuthors();\r\n  }, [])\r\n\r\n  if(isLoading){\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <section className=\"authors\">\r\n      <div className=\"container authors-container\">\r\n        {authors.length > 0 ? (\r\n          authors.map(({ id, avatar, name, posts }) => (\r\n            <div key={id} className=\"author-card\">\r\n              <Link to={`/posts/${id}`} className=\"author-link\">\r\n                <img src={`${process.env.REACT_APP_ASSETS_URL}/uploads/${avatar}`} alt={`Image of ${name}`} className=\"author-avatar\" />\r\n                <div className=\"author-info\">\r\n                  <h4 className=\"author-name\">{name}</h4>\r\n                  <p className=\"author-posts\">{posts} Posts</p>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h2>No users/authors found.</h2>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Authors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}