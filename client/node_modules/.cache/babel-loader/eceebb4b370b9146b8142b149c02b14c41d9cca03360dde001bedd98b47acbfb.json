{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\components\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PostItem from './PostItem';\nimport Loader from '.Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts`);\n        if (response && response.data) {\n          setPosts(response.data);\n        } else {\n          setPosts([]); // Set empty array if response or response.data is undefined\n        }\n      } catch (err) {\n        console.log(err);\n      }\n      setIsLoading(false);\n    };\n    fetchPosts();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts\",\n    children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container posts_container\",\n      children: posts.map(({\n        _id,\n        thumbnail,\n        category,\n        title,\n        description,\n        creator,\n        createdAt\n      }) => /*#__PURE__*/_jsxDEV(PostItem, {\n        postID: _id,\n        thumbnail: thumbnail,\n        category: category,\n        title: title,\n        desc: description,\n        authorID: creator,\n        createdAt: createdAt\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"center\",\n      children: \"No posts Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"9EbuWposWmGSKTvULeBrk34wPps=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","axios","PostItem","Loader","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","isLoading","setIsLoading","fetchPosts","response","get","process","env","REACT_APP_BASE_URL","data","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","_id","thumbnail","category","title","description","creator","createdAt","postID","desc","authorID","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/components/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PostItem from './PostItem';\r\nimport Loader from '.Loader';\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts`);\r\n        if (response && response.data) {\r\n          setPosts(response.data);\r\n        } else {\r\n          setPosts([]); // Set empty array if response or response.data is undefined\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  \r\n    fetchPosts();\r\n  }, []);\r\n  \r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <section className='posts'>\r\n      {posts.length > 0 ? (\r\n        <div className='container posts_container'>\r\n          {posts.map(({ _id, thumbnail, category, title, description, creator, createdAt }) => (\r\n            <PostItem\r\n              key={_id}\r\n              postID={_id}\r\n              thumbnail={thumbnail}\r\n              category={category}\r\n              title={title}\r\n              desc={description} \r\n              authorID={creator} \r\n              createdAt={createdAt}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h2 className='center'>No posts Found</h2>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,QAAO,CAAC;QAC3E,IAAIJ,QAAQ,IAAIA,QAAQ,CAACK,IAAI,EAAE;UAC7BT,QAAQ,CAACI,QAAQ,CAACK,IAAI,CAAC;QACzB,CAAC,MAAM;UACLT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAChB;MACF,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;MACAR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIF,SAAS,EAAE;IACb,oBAAOL,OAAA,CAACF,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;EAEA,oBACEpB,OAAA;IAASqB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACvBnB,KAAK,CAACoB,MAAM,GAAG,CAAC,gBACfvB,OAAA;MAAKqB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCnB,KAAK,CAACqB,GAAG,CAAC,CAAC;QAAEC,GAAG;QAAEC,SAAS;QAAEC,QAAQ;QAAEC,KAAK;QAAEC,WAAW;QAAEC,OAAO;QAAEC;MAAU,CAAC,kBAC9E/B,OAAA,CAACH,QAAQ;QAEPmC,MAAM,EAAEP,GAAI;QACZC,SAAS,EAAEA,SAAU;QACrBC,QAAQ,EAAEA,QAAS;QACnBC,KAAK,EAAEA,KAAM;QACbK,IAAI,EAAEJ,WAAY;QAClBK,QAAQ,EAAEJ,OAAQ;QAClBC,SAAS,EAAEA;MAAU,GAPhBN,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQT,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENpB,OAAA;MAAIqB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAC1C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAlDKD,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}