{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\CategoryStory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostItem from '../components/PostItem';\nimport axios from 'axios';\nimport Loader from '../components/Loader';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryStory = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const id = useParams;\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/categor/${id}`);\n        setPosts(response === null || response === void 0 ? void 0 : response.data);\n      } catch (err) {\n        console.log(err);\n      }\n      setIsLoading(false);\n    };\n    fetchPosts();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts\",\n    children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container posts_conatiner\",\n      children: posts.map(({\n        id,\n        thumbnail,\n        category,\n        title,\n        desc,\n        authorID\n      }) => /*#__PURE__*/_jsxDEV(PostItem, {\n        postID: id,\n        thumbnail: thumbnail,\n        category: category,\n        title: title,\n        desc: desc,\n        authorID: authorID\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"center\",\n      children: \"No posts Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryStory, \"wxHxsT1ElhOKn/brbRGpUSJ2kl4=\");\n_c = CategoryStory;\nexport default CategoryStory;\nvar _c;\n$RefreshReg$(_c, \"CategoryStory\");","map":{"version":3,"names":["React","useEffect","useState","PostItem","axios","Loader","useParams","jsxDEV","_jsxDEV","CategoryStory","_s","posts","setPosts","isLoading","setIsLoading","id","fetchPosts","response","get","process","env","REACT_APP_BASE_URL","data","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","thumbnail","category","title","desc","authorID","postID","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/CategoryStory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PostItem from '../components/PostItem'\r\nimport axios from 'axios'\r\nimport Loader from '../components/Loader'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nconst CategoryStory = () => {\r\n  const[posts,setPosts] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const id = useParams;\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/categor/${id}`)\r\n        setPosts(response?.data)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n      \r\n      setIsLoading(false)\r\n    }\r\n    fetchPosts();\r\n  }, [])\r\n\r\n  if(isLoading){\r\n    return <Loader />\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='posts'>\r\n        {posts.length > 0 ? <div className='container posts_conatiner'>\r\n            {posts.map(({ id, thumbnail, category, title, desc, authorID }) => \r\n            <PostItem key={id} postID={id} thumbnail={thumbnail} category={category} title={title} desc={desc} authorID={authorID} />\r\n        )}\r\n        </div>: <h2 className='center'>No posts Found</h2>}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CategoryStory\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,EAAE,GAAGT,SAAS;EAEpBL,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BF,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,kBAAiBN,EAAG,EAAC,CAAC;QACzFH,QAAQ,CAACK,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;MAEAT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGH,SAAS,EAAC;IACX,oBAAOL,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;EAGA,oBACErB,OAAA;IAASsB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACrBpB,KAAK,CAACqB,MAAM,GAAG,CAAC,gBAAGxB,OAAA;MAAKsB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACzDpB,KAAK,CAACsB,GAAG,CAAC,CAAC;QAAElB,EAAE;QAAEmB,SAAS;QAAEC,QAAQ;QAAEC,KAAK;QAAEC,IAAI;QAAEC;MAAS,CAAC,kBAC9D9B,OAAA,CAACL,QAAQ;QAAUoC,MAAM,EAAExB,EAAG;QAACmB,SAAS,EAAEA,SAAU;QAACC,QAAQ,EAAEA,QAAS;QAACC,KAAK,EAAEA,KAAM;QAACC,IAAI,EAAEA,IAAK;QAACC,QAAQ,EAAEA;MAAS,GAAvGvB,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuG,CAC5H;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,gBAAErB,OAAA;MAAIsB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAnCKD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAqCnB,eAAeA,aAAa;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}