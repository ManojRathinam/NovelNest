{"ast":null,"code":"var _jsxFileName = \"E:\\\\Manoj\\\\KMS\\\\NovelNest\\\\client\\\\src\\\\pages\\\\AuthorStory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostItem from '../components/PostItem';\nimport axios from 'axios';\nimport Loader from '../components/Loader';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthorStory = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/users/${id}`);\n        setPosts(response === null || response === void 0 ? void 0 : response.data);\n      } catch (err) {\n        console.log(err);\n      }\n      setIsLoading(false);\n    };\n    fetchPosts();\n  }, [id]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts\",\n    children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container posts_conatiner\",\n      children: posts.map(({\n        _id,\n        thumbnail,\n        category,\n        title,\n        description,\n        author\n      }) => /*#__PURE__*/_jsxDEV(PostItem, {\n        postID: _id,\n        thumbnail: thumbnail,\n        category: category,\n        title: title,\n        desc: description,\n        authorID: author\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"center\",\n      children: \"No posts Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthorStory, \"KTiCa3kkSDUMRAJuhvoX8lz3XHo=\", false, function () {\n  return [useParams];\n});\n_c = AuthorStory;\nexport default AuthorStory;\nvar _c;\n$RefreshReg$(_c, \"AuthorStory\");","map":{"version":3,"names":["React","useEffect","useState","PostItem","axios","Loader","useParams","jsxDEV","_jsxDEV","AuthorStory","_s","posts","setPosts","isLoading","setIsLoading","id","fetchPosts","response","get","process","env","REACT_APP_BASE_URL","data","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","_id","thumbnail","category","title","description","author","postID","desc","authorID","_c","$RefreshReg$"],"sources":["E:/Manoj/KMS/NovelNest/client/src/pages/AuthorStory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostItem from '../components/PostItem';\r\nimport axios from 'axios';\r\nimport Loader from '../components/Loader';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AuthorStory = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/posts/users/${id}`);\r\n        setPosts(response?.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchPosts();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <section className='posts'>\r\n      {posts.length > 0 ? (\r\n        <div className='container posts_conatiner'>\r\n          {posts.map(({ _id, thumbnail, category, title, description, author }) => (\r\n            <PostItem key={_id} postID={_id} thumbnail={thumbnail} category={category} title={title} desc={description} authorID={author} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h2 className='center'>No posts Found</h2>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthorStory;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM;IAAEa;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE1BL,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BF,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,gBAAeN,EAAG,EAAC,CAAC;QACvFH,QAAQ,CAACK,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;MACAT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAER,IAAIF,SAAS,EAAE;IACb,oBAAOL,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;EAEA,oBACErB,OAAA;IAASsB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACvBpB,KAAK,CAACqB,MAAM,GAAG,CAAC,gBACfxB,OAAA;MAAKsB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCpB,KAAK,CAACsB,GAAG,CAAC,CAAC;QAAEC,GAAG;QAAEC,SAAS;QAAEC,QAAQ;QAAEC,KAAK;QAAEC,WAAW;QAAEC;MAAO,CAAC,kBAClE/B,OAAA,CAACL,QAAQ;QAAWqC,MAAM,EAAEN,GAAI;QAACC,SAAS,EAAEA,SAAU;QAACC,QAAQ,EAAEA,QAAS;QAACC,KAAK,EAAEA,KAAM;QAACI,IAAI,EAAEH,WAAY;QAACI,QAAQ,EAAEH;MAAO,GAA9GL,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6G,CAChI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENrB,OAAA;MAAIsB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAC1C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACnB,EAAA,CArCID,WAAW;EAAA,QAIAH,SAAS;AAAA;AAAAqC,EAAA,GAJpBlC,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}